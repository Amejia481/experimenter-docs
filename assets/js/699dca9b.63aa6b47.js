(self.webpackChunkexperimenter_docs=self.webpackChunkexperimenter_docs||[]).push([[357],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),m=l(n),f=a,d=m["".concat(s,".").concat(f)]||m[f]||c[f]||i;return n?r.createElement(d,o(o({ref:t},p),{},{components:n})):r.createElement(d,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:a,o[1]=u;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4073:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return l},default:function(){return c}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o={id:"platform-feature-api",title:"Nimbus Feature API (Platform)",slug:"/platform-feature-api"},u=void 0,s={unversionedId:"platform-feature-api",id:"platform-feature-api",isDocsHomePage:!1,title:"Nimbus Feature API (Platform)",description:"This guide will help you set up the Nimbus Feature API for Platform features.",source:"@site/docs/platform-feature-api.md",sourceDirName:".",slug:"/platform-feature-api",permalink:"/platform-feature-api",editUrl:"https://github.com/mozilla/experimenter-docs/edit/main/docs/platform-feature-api.md",tags:[],version:"current",frontMatter:{id:"platform-feature-api",title:"Nimbus Feature API (Platform)",slug:"/platform-feature-api"},sidebar:"sidebar",previous:{title:"Nimbus Feature API (JS)",permalink:"/desktop-feature-api"},next:{title:"Migration Guide (JS)",permalink:"/desktop-migration-guide"}},l=[{value:"About the Feature API",id:"about-the-feature-api",children:[{value:"Can I use this?",id:"can-i-use-this",children:[]},{value:"What is a feature?",id:"what-is-a-feature",children:[]},{value:"1. Registering a new feature",id:"1-registering-a-new-feature",children:[]},{value:"2. Testing",id:"2-testing",children:[]}]}],p={toc:l};function c(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This guide will help you set up the Nimbus Feature API for Platform features.\nSupport is currently limited to a hybrid approach where enrollment processing\nhappens in JS and the CPP API exposes ",(0,i.kt)("inlineCode",{parentName:"p"},"OnUpdate")," for notifications about changes\nand ",(0,i.kt)("inlineCode",{parentName:"p"},"GetInt"),"/",(0,i.kt)("inlineCode",{parentName:"p"},"GetBool")," to retrieve the value."),(0,i.kt)("h2",{id:"about-the-feature-api"},"About the Feature API"),(0,i.kt)("h3",{id:"can-i-use-this"},"Can I use this?"),(0,i.kt)("p",null,"As of Firefox 92, your can use the Desktop Nimbus Feature API if your code."),(0,i.kt)("p",null,"If you have a usecase that isn't supported, please reach out in #ask-experimenter on Slack."),(0,i.kt)("h3",{id:"what-is-a-feature"},"What is a feature?"),(0,i.kt)("p",null,"In the Nimbus ecosystem, a ",(0,i.kt)("inlineCode",{parentName:"p"},"feature")," is an area of code instrumented for experiments and remote configuration. It can be as small as a single function or as complex as a whole about: page. Some examples:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"aboutwelcome"),", The about:welcome page in Desktop"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"newtab"),", The about:newtab page in Desktop")),(0,i.kt)("h3",{id:"1-registering-a-new-feature"},"1. Registering a new feature"),(0,i.kt)("p",null,"To register a new feature, you will need to choose an identifier and add it to the manifest in ",(0,i.kt)("a",{parentName:"p",href:"https://searchfox.org/mozilla-central/source/toolkit/components/nimbus/FeatureManifest.js"},"FeatureManifest.js"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'// In FeatureManifest.js\n\nconst MANIFEST = {\n  // Our feature name\n  aboutwelcome: {\n    description: "The about:welcome page",\n    // This is required for Platform features\n    isEarlyStartup: true,\n    variables: {\n      skipFocus: {\n        type: "boolean",\n      },\n    },\n  },\n};\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'#include "mozilla/browser/NimbusFeatures.h"\n\n// feature name and variable name to retrieve the value\nNimbusFeatures::GetInt("aboutwelcome"_ns, "skipFocus"_ns, false);\n\n// get notified if the value changes\nNimbusFeatures::OnUpdate("aboutwelcome"_ns, "skipFocus"_ns,\n  [](const char*, void*){}, void*);\n')),(0,i.kt)("h3",{id:"2-testing"},"2. Testing"),(0,i.kt)("p",null,"If mochitests are enough we have enrollment helpers that simulate the experiment flow:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'const { ExperimentFakes } = ChromeUtils.import(\n  "resource://testing-common/NimbusTestUtils.jsm"\n);\n\nlet doExperimentCleanup = await ExperimentFakes.enrollWithFeatureConfig({\n  featureId: "firefox100",\n  value: { firefoxVersion: 100 },\n});\n\n// Your test\n\n// to clear prefs and session data\nawait doExperimentCleanup();\n')),(0,i.kt)("p",null,"Otherwise for a ",(0,i.kt)("inlineCode",{parentName:"p"},"gTest")," or other requirements you can set a pref ",(0,i.kt)("inlineCode",{parentName:"p"},"nimbus.syncdatastore.<feature name>.<variable name>")," with the appropriate type you defined in the FeatureManifest."),(0,i.kt)("p",null,"\u26a0\ufe0f This variable naming convention is an implementation detail and might change in the future."),(0,i.kt)("h4",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Examples of platform consumers:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://phabricator.services.mozilla.com/D121112"},"Bug 1719070 - UA: Add support for a Nimbus experiment to override Firefox's User-Agent string."))))}c.isMDXComponent=!0}}]);